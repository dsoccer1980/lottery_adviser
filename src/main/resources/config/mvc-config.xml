<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">


    <!-- context:component-scan This tag will scan @Component, @Repository, @Service, @Controller
             and also resolves @Autowired and @Qualifier -->
    <context:component-scan base-package="ru.dsoccer1980.lottery_adviser"/>

    <jpa:repositories base-package="ru.dsoccer1980.**.repository"/>

    <!--<mvc:annotation-driven/>-->

    <!-- ViewResolver bean config for mapping strings to jsp views -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
        <property name="order" value="1"/>
        <property name="prefix" value="/WEB-INF/view"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <!-- Static Resources Configuration (get access to static sources such as CSS and JavaScript files) -->
    <!--<mvc:resources mapping="/resources/**" location="/resources/" />-->

    <!-- activate @Transactional JPA annotation -->
    <tx:annotation-driven/>


</beans>